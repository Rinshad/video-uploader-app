name: Provision Kind Cluster and deploy application

on:
  push:
    branches:
      - master
      jobs:
        build-and-push:
          runs-on: ubuntu-latest
          steps:
            - name: Checkout code
              uses: actions/checkout@v3
            
            - name: SonarQube Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
            
            - name: Install Trivy
              run: |
                sudo apt-get update
                sudo apt-get install -y wget
                wget https://github.com/aquasecurity/trivy/releases/download/v0.32.1/trivy_0.32.1_Linux-64bit.deb
                sudo dpkg -i trivy_0.32.1_Linux-64bit.deb
      
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
      
            - name: Log in to DockerHub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
      
            - name: Set up QEMU (for cross-platform builds)
              uses: docker/setup-qemu-action@v2
      
            - name: Build and push API image
              run: |
                docker buildx build \
                  --platform linux/amd64 \
                  --file Dockerfile.rails \
                  --tag ${{ secrets.DOCKERHUB_USERNAME }}/api:latest \
                  --push .
      
            - name: Scan API image with Trivy
              run: |
                trivy image --format json --output trivy-api-report.json ${{ secrets.DOCKERHUB_USERNAME }}/api:latest
      
            - name: Upload API scan result as artifact
              uses: actions/upload-artifact@v4
              with:
                name: trivy-api-report
                path: trivy-api-report.json
      
            - name: Build and push Sidekiq image
              run: |
                docker buildx build \
                  --platform linux/amd64 \
                  --file Dockerfile.rails \
                  --tag ${{ secrets.DOCKERHUB_USERNAME }}/sidekiq:latest \
                  --push .
      
            - name: Scan Sidekiq image with Trivy
              run: |
                trivy image --format json --output trivy-sidekiq-report.json ${{ secrets.DOCKERHUB_USERNAME }}/sidekiq:latest
      
            - name: Upload Sidekiq scan result as artifact
              uses: actions/upload-artifact@v4
              with:
                name: trivy-sidekiq-report
                path: trivy-sidekiq-report.json
      
            - name: Build and push SPA image
              run: |
                docker buildx build \
                  --platform linux/amd64 \
                  --file Dockerfile.react \
                  --tag ${{ secrets.DOCKERHUB_USERNAME }}/spa:latest \
                  --push .
      
            - name: Scan SPA image with Trivy
              run: |
                trivy image --format json --output trivy-spa-report.json ${{ secrets.DOCKERHUB_USERNAME }}/spa:latest
      
            - name: Upload SPA scan result as artifact
              uses: actions/upload-artifact@v4
              with:
                name: trivy-spa-report
                path: trivy-spa-report.json
      
            - name: Build and push Nginx image
              run: |
                docker buildx build \
                  --platform linux/amd64 \
                  --file Dockerfile.nginx \
                  --tag ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest \
                  --push .
      
            - name: Scan Nginx image with Trivy
              run: |
                docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest
                trivy image --format json --output trivy-nginx-report.json ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest
      
            - name: Upload Nginx scan result as artifact
              uses: actions/upload-artifact@v4
              with:
                name: trivy-nginx-report
                path: trivy-nginx-report.json
      
      
jobs:
  provision-kind-cluster:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0 

      - name: Initialize Terraform
        working-directory: ./infra
        run: terraform init -upgrade

      - name: Apply Terraform Configuration
        working-directory: ./infra
        run: terraform apply -auto-approve

      - name: Cluster uptime
        run: |
          sleep 30 

      - name: Verify Kind Cluster
        run: |
          kubectl get nodes
          kubectl cluster-info

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      
      - name: Create Namespace
        run: |
          kubectl create namespace video-uploader || echo "Namespace video-uploader already exists"

      - name: Deploy Helm Chart
        run: |
          cd Helm_Chart
          helm install video-uploader . -n video-uploader
          sleep 30 

      - name: Modify /etc/hosts
        run: |
          sudo echo "127.0.0.1 video-app.local" | sudo tee -a /etc/hosts

      - name: Application Test
        run: |
          kubectl get ing -n video-uploader
          kubectl get pods -n video-uploader
          kubectl get svc -n video-uploader
          sleep 30 
          kubectl run test-pod --image=busybox --rm -it -- wget -qO- http://nginx.video-uploader.svc.cluster.local:8000
 
